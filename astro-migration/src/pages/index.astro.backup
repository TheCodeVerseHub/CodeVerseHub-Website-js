---
import Layout from '../layouts/Layout.astro';
import { db } from '../db';
import { testimonials, announcements } from '../db/schema';
import { eq } from 'drizzle-orm';

// Fetch data server-side
const activeTestimonials = await db.select().from(testimonials).where(eq(testimonials.isActive, true)).limit(3);
const activeAnnouncements = await db.select().from(announcements).where(eq(announcements.isActive, true)).limit(3);

const discordStats = {
  members: 450,
  channels: 10,
  bots: 5
};
---

<Layout title="CodeVerseHub - Discord Coding Community">
  <!-- Hero Section -->
  <section class="hero-static">
    <div class="hero-static-bg"></div>
    <div class="container" style="position: relative; z-index: 2;">
      <div class="row align-items-center g-5">
        <div class="col-lg-7">
          <h1 class="hero-static-title">
            Join the <span class="accent">CodeVerse</span> Community
          </h1>
          <p class="hero-static-sub">
            Connect with passionate developers, participate in coding challenges, and level up your skills in our vibrant Discord community.
          </p>
          
          <ul class="hero-static-points">
            <li>
              <i class="fas fa-code"></i>
              <span>Daily coding challenges & contests</span>
            </li>
            <li>
              <i class="fas fa-users"></i>
              <span>Active community of {discordStats.members}+ developers</span>
            </li>
            <li>
              <i class="fas fa-trophy"></i>
              <span>Compete, learn, and earn recognition</span>
            </li>
            <li>
              <i class="fas fa-book"></i>
              <span>Curated learning resources & tutorials</span>
            </li>
          </ul>

          <div class="hero-cta" style="display: flex; gap: 1rem; margin-top: 2rem;">
            <a href="https://discord.gg/your-invite" class="hero-primary" target="_blank">
              <i class="fab fa-discord"></i> Join Discord
            </a>
            <a href="/about" class="hero-ghost">
              Learn More
            </a>
          </div>
        </div>

        <div class="col-lg-5">
          <div class="hero-static-visual">
            <div class="mockup">
              <i class="fab fa-discord"></i>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="stats-section">
    <div class="container">
      <div class="row g-4">
        <div class="col-md-4">
          <div class="stat-card">
            <i class="fas fa-users stat-icon"></i>
            <h3 class="stat-number">{discordStats.members}+</h3>
            <p class="stat-label">Community Members</p>
          </div>
        </div>
        <div class="col-md-4">
          <div class="stat-card">
            <i class="fas fa-comments stat-icon"></i>
            <h3 class="stat-number">{discordStats.channels}</h3>
            <p class="stat-label">Active Channels</p>
          </div>
        </div>
        <div class="col-md-4">
          <div class="stat-card">
            <i class="fas fa-robot stat-icon"></i>
            <h3 class="stat-number">{discordStats.bots}</h3>
            <p class="stat-label">Helpful Bots</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Announcements -->
  {activeAnnouncements.length > 0 && (
    <section class="announcements-section">
      <div class="container">
        <h2 class="section-title">Latest Announcements</h2>
        <div class="announcements-grid">
          {activeAnnouncements.map((announcement) => (
            <div class="announcement-card">
              <h3>{announcement.title}</h3>
              <p>{announcement.content}</p>
              <time>{new Date(announcement.createdAt).toLocaleDateString()}</time>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Testimonials -->
  {activeTestimonials.length > 0 && (
    <section class="testimonials-section">
      <div class="container">
        <h2 class="section-title">What Our Members Say</h2>
        <div class="testimonials-grid">
          {activeTestimonials.map((testimonial) => (
            <div class="testimonial-card">
              <div class="testimonial-rating">
                {Array.from({ length: testimonial.rating || 5 }).map(() => (
                  <i class="fas fa-star"></i>
                ))}
              </div>
              <p class="testimonial-content">"{testimonial.content}"</p>
              <div class="testimonial-author">
                <img src={testimonial.avatar || '/images/default.jpg'} alt={testimonial.name} />
                <div>
                  <h4>{testimonial.name}</h4>
                  <p>{testimonial.role}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Contact Form -->
  <section class="contact-section">
    <div class="container">
      <h2 class="section-title">Get In Touch</h2>
      <form id="contactForm" class="contact-form">
        <div class="form-group">
          <input type="text" name="name" placeholder="Your Name" required />
        </div>
        <div class="form-group">
          <input type="email" name="email" placeholder="Your Email" required />
        </div>
        <div class="form-group">
          <input type="text" name="subject" placeholder="Subject" />
        </div>
        <div class="form-group">
          <textarea name="message" placeholder="Your Message" rows="5" required></textarea>
        </div>
        <button type="submit" class="submit-btn">Send Message</button>
      </form>
    </div>
  </section>
</Layout>

<script>
  document.getElementById('contactForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    
    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        body: JSON.stringify(Object.fromEntries(formData)),
        headers: { 'Content-Type': 'application/json' }
      });
      
      if (response.ok) {
        alert('Message sent successfully!');
        form.reset();
      } else {
        alert('Failed to send message. Please try again.');
      }
    } catch (error) {
      alert('An error occurred. Please try again.');
    }
  });
</script>
