---
import Layout from '../layouts/Layout.astro';

interface QA { q: string; a: string; }
interface FAQCategory { key: string; icon: string; label: string; items: QA[] }

// Data model compiled from original Django FAQ (content preserved verbatim)
const faqData: FAQCategory[] = [
  {
    key: 'general', icon: 'fa-info-circle', label: 'General Questions',
    items: [
      { q: 'What is CodeVerseHub?', a: 'CodeVerseHub is a competitive programming platform designed specifically for our Discord community. It provides a comprehensive environment for coding contests, practice problems, skill development, and collaborative learning among programmers of all levels.' },
      { q: 'How do I get started on CodeVerseHub?', a: 'Getting started is easy! Simply create an account using our registration page, join our Discord server, and you can immediately start participating in contests, solving practice problems, and engaging with our community of programmers.' },
      { q: 'Is CodeVerseHub free to use?', a: 'Yes! CodeVerseHub is completely free to use. All features including contests, practice problems, community discussions, and learning resources are available at no cost to all members of our Discord community.' },
      { q: 'What programming languages are supported?', a: 'We support all major programming languages including Python, Java, C++, C, JavaScript, Go, Rust, and many others. You can choose your preferred language for solving problems and participating in contests.' }
    ]
  },
  {
    key: 'account', icon: 'fa-user-circle', label: 'Account & Profile',
    items: [
      { q: 'How do I create an account?', a: 'Click on the "Register" button in the navigation menu, fill out the registration form with your details including your Discord username, and verify your email address. Once registered, you can immediately start using all platform features.' },
      { q: 'Can I change my username later?', a: 'Your username is permanent once created to maintain consistency in leaderboards and contest history. However, you can update your display name, bio, and other profile information at any time through your profile settings.' },
      { q: 'What if I forget my password?', a: 'Use the "Forgot Password" link on the login page to reset your password. You\'ll receive an email with instructions to create a new password. Make sure to check your spam folder if you don\'t see the email immediately.' }
    ]
  },
  {
    key: 'contests', icon: 'fa-trophy', label: 'Contests',
    items: [
      { q: 'How do I participate in contests?', a: 'Browse available contests on the Contests page, click on a contest you\'re interested in, and register before the contest starts. Once registered, you can participate when the contest begins and submit solutions to the problems.' },
      { q: 'What types of contests are available?', a: 'We offer various contest formats including individual competitions, team contests, weekly challenges, themed contests (like algorithms or data structures), and special community events with different difficulty levels.' },
      { q: 'How is scoring calculated in contests?', a: 'Scoring typically considers correctness, time taken to solve problems, and number of submissions. Each contest may have specific scoring rules which are clearly outlined in the contest description before it begins.' }
    ]
  },
  {
    key: 'problems', icon: 'fa-puzzle-piece', label: 'Problems & Solutions',
    items: [
      { q: 'How are problems categorized by difficulty?', a: 'Problems are categorized as Easy, Medium, or Hard based on algorithmic complexity, implementation difficulty, and the concepts required. Beginners should start with Easy problems and gradually progress to more challenging ones.' },
      { q: 'What happens after I submit a solution?', a: 'Your solution is automatically tested against multiple test cases. You\'ll receive immediate feedback including verdict (Accepted, Wrong Answer, Time Limit Exceeded, etc.), execution time, and memory usage.' },
      { q: 'Can I see test cases for problems?', a: 'Each problem includes sample test cases with expected outputs to help you understand the problem. However, your solution will be tested against additional hidden test cases to ensure correctness.' }
    ]
  },
  {
    key: 'technical', icon: 'fa-cog', label: 'Technical Support',
    items: [
      { q: 'What are the time and memory limits for solutions?', a: 'Time and memory limits vary by problem and are clearly specified in each problem statement. Typical limits are 1-2 seconds for time and 256-512 MB for memory, but these can vary based on problem complexity.' },
      { q: 'Why is my code giving a runtime error?', a: 'Runtime errors can occur due to array out of bounds, division by zero, infinite recursion, or other execution issues. Check your code for edge cases, proper input handling, and ensure all variables are properly initialized.' },
      { q: 'What should I do if I encounter a technical issue?', a: 'Report technical issues through our Discord server or contact our moderators. Include details about the problem, your browser/system information, and steps to reproduce the issue for faster resolution.' }
    ]
  },
  {
    key: 'server', icon: 'fa-server', label: 'Server & Community Operations',
    items: [
      { q: 'How do I use bot commands?', a: 'Use bot commands mainly in <strong>🤖｜》bot-commands</strong> or <strong>💰｜》economy</strong> channels. Start typing <code>/</code> and select a command. Common examples:<ul><li><code>/balance</code> – Check your coins</li><li><code>/work</code> – Earn in‑server currency</li><li><code>/level</code> – View your XP level</li></ul>Some bots may use a prefix like <code>!</code>, <code>$</code>, or <code>?</code> — this is usually mentioned in the bot’s name or documentation.' },
      { q: 'What roles exist and how do I get them?', a: 'Main role categories:<ul><li><strong>Language Roles:</strong> Python, Java, C++, C, PHP, Rust, JavaScript, TypeScript, SQL, HTML, CSS, Go, Scala, Assembly, Dart, more… (Select during onboarding or via reactions in <strong>🎖️｜⌯⌲｜ʀᴏʟᴇs</strong>).</li><li><strong>Field Roles:</strong> Web Dev, ML, Cybersecurity, Blockchain, Game Dev, etc. (Onboarding / reaction roles).</li><li><strong>Team / Staff:</strong> Apply in <strong>📄｜⌯⌲｜staff-applications</strong>; every application is carefully reviewed.</li><li><strong>Event / Achievement:</strong> Temporary titles like “Genius” or “Codemaster” earned via <strong>⚔️｜⌯⌲｜ᴇᴠᴇɴᴛs</strong> and <strong>❓｜》questions</strong>.</li><li><strong>Booster:</strong> Boosting unlocks perks, exclusive access, early event entry, and highest visible role.</li><li><strong>Activity Ladder:</strong> Active → Very Active → Ultra Active → Elite Member → Honorably Active → Top Contributors (automatically via Arcane bot level; unlocks channels & perms).</li></ul>' },
      { q: 'How do I participate in coding events?', a: 'Events are announced in <strong>📢｜⌯⌲｜ᴀɴɴᴏᴜɴᴇᴍᴇɴᴛs</strong>, <strong>⚔️｜⌯⌲｜ᴇᴠᴇɴᴛs</strong>, and <strong>📊｜》polls</strong>. To join:<ol><li>Watch <strong>📢｜⌯⌲｜ᴀɴɴᴏᴜɴᴇᴍᴇɴᴛs</strong> for dates.</li><li>Follow the instructions (react, register, or submit as instructed).</li><li>Winners + rewards announced in announcements.</li><li>Prizes: badges, roles, or public shout‑outs.</li></ol>' },
      { q: 'Where do I find study resources or project help?', a: 'Use the following channels:<ul><li><strong>📚｜》resources</strong>: curated links, PDFs, tools, cheat sheets.</li><li><strong>🐙｜》github-links</strong>: open-source repos.</li><li><strong>🧠｜》cs-theory</strong>: DSA help & concepts.</li></ul>Ask doubts in <strong>❓｜》ask-for-help</strong>. Showcase builds in <strong>🧪｜》projects-showcase</strong>.' },
      { q: 'How should I ask for help properly?', a: 'In <strong>❓｜》ask-for-help</strong>:<ul><li>Mention language / tech (e.g., Python, HTML).</li><li>Provide code or errors in fenced code blocks (<code>```</code>).</li><li>State expected vs. actual behavior.</li><li>Avoid vague lines like “it’s not working”.</li></ul>' },
      { q: 'What languages & tech stacks are supported?', a: 'Broad support for languages: Python, C/C++, Java, JavaScript, TypeScript, HTML, CSS, SQL, NoSQL, Rust, Dart, Scala, PHP, Assembly, Go, and more. Fields: Game Dev (Unity / Roblox / Minecraft scripting), Web Dev, ML, AI, Data Science/Analytics, Blockchain, Cybersecurity, etc.<div class="mt-2">Helpful channels:</div><ul><li>🐍｜》python – Python</li><li>⚡｜》javascript – JS (Node, Next, React, Angular, Strapi, Vue)</li><li>🕸️｜》web-dev – HTML / CSS</li><li>💻｜》c-cpp – C / C++</li><li>🧮｜》databases – SQL / NoSQL</li><li>🌐｜》other-languages – Misc languages & new forums</li></ul>Suggest a new language forum with <code>!suggest &lt;your idea&gt;</code> in <strong>🤖｜》bot-commands</strong>.' },
      { q: 'Rules for submitting projects or challenge answers?', a: 'When posting in <strong>🧪｜》projects-showcase</strong>:<ul><li>Include source code (no <code>.exe</code> / <code>.bat</code> uploads).</li><li>Add a short descriptive summary.</li><li>No copied or AI‑generated content without credit.</li><li>Respect event deadlines.</li></ul>' },
      { q: 'What happens if rules are broken?', a: 'Possible actions:<ul><li>Warning</li><li>Mute / Timeout (Quarantine)</li><li>Temporary or permanent ban</li></ul>Education is prioritized, but repeated violations escalate consequences.' },
      { q: 'How do I report spam or offensive content?', a: 'Steps:<ol><li>Right‑click message → Copy Message Link.</li><li>Create a ticket in <strong>🎟️｜⌯⌲｜ᴛɪᴄᴋᴇᴛs</strong>.</li><li>Optionally ping staff if urgent.</li></ol>Do not engage with spammers — just report.' },
      { q: 'What counts as off‑topic?', a: 'Off‑topic = not matching the channel purpose. Examples:<ul><li>Memes in <strong>❓｜》ask-for-help</strong></li><li>Food talk in <strong>💬｜》dev-discussion</strong></li></ul>Use <strong>🗨️｜》lobby</strong> for casual chat, <strong>🎮｜》gaming-anime-talk</strong> for games/anime, and <strong>🤣｜》memes-and-media</strong> for memes.' },
      { q: 'Still have a question not listed here?', a: 'Post it in <strong>💡｜⌯⌲｜sᴜɢɢᴇsᴛɪᴏɴs</strong> using <code>!suggest &lt;your suggestion&gt;</code> in <strong>🤖｜》bot-commands</strong>, open a ticket, or ask politely in <strong>❓｜》ask-for-help</strong>. We’re here to help you get the most from the community.<div class="mt-3 text-info">— Aditya ✧ YC45</div>' }
    ]
  }
];

const allCategories = faqData.map(c => c.key);
---
<Layout title="FAQ - CodeVerseHub">
  <div class="faq-page-wrapper">
    <section class="faq-hero">
      <div class="faq-hero-inner">
        <div class="faq-hero-icon"><i class="fas fa-question"></i></div>
        <h1 class="faq-hero-title gradient-text">Frequently Asked Questions</h1>
        <p class="faq-hero-sub">Quick answers about contests, problems, roles, events, support & getting started. Search or filter by category.</p>
        <div class="faq-controls">
          <div class="faq-search-wrap">
            <i class="fas fa-search faq-search-icon"></i>
            <input id="faqSearch" type="text" placeholder="Search questions or answers..." aria-label="Search FAQs" />
          </div>
          <div class="faq-categories" id="faqCategories" role="tablist" aria-label="FAQ Categories">
            <button class="faq-cat-btn active" data-cat="all" aria-pressed="true">All</button>
            {faqData.map(cat => (
              <button class="faq-cat-btn" data-cat={cat.key} aria-pressed="false">{cat.label}</button>
            ))}
          </div>
        </div>
      </div>
    </section>

    <section class="faq-section">
      <div class="faq-grid" id="faqList">
        {faqData.map(cat => (
          <>
            <div class="faq-category-heading" data-category-heading={cat.key}><i class={`fas ${cat.icon}`}></i>{cat.label}</div>
            {cat.items.map((item, idx) => (
              <details class="faq-item faq-animate" data-category={cat.key} data-index={idx}>
                <summary>
                  <span class="icon"><i class="fas fa-hashtag"></i></span>
                  <span>{item.q}</span>
                  <i class="fas fa-chevron-down caret" aria-hidden="true"></i>
                </summary>
                <div class="faq-answer" set:html={item.a}></div>
              </details>
            ))}
          </>
        ))}
      </div>
    </section>

    <section class="pb-5" style="margin-top:-1.5rem;">
      <div class="container text-center" style="max-width:780px;">
        <div class="glass-card p-4 p-md-5" style="border-radius:22px;">
          <h2 class="h4 gradient-text mb-3"><i class="fas fa-headset me-2"></i>Still Need Help?</h2>
          <p class="mb-4 text-secondary small">Can’t find what you’re looking for? Reach out — the community & moderators are happy to help you level up.</p>
          <div class="d-flex flex-wrap justify-content-center gap-3">
            <a class="btn btn-gradient" href="https://discord.gg/3xKFvKhuGR" target="_blank" rel="noopener"><i class="fab fa-discord me-2"></i>Join Discord</a>
            <a class="btn btn-gradient-outline" href="mailto:support@codeversehub.com"><i class="fas fa-envelope me-2"></i>Email Support</a>
          </div>
        </div>
      </div>
    </section>
  </div>

  <script>
    // Mark JS enabled for CSS fallbacks
    document.body.classList.add('js-enabled');
    const searchInput = document.getElementById('faqSearch');
    const catButtons = Array.from(document.querySelectorAll('.faq-cat-btn'));
    const faqItems = Array.from(document.querySelectorAll('details.faq-item'));
    const headings = Array.from(document.querySelectorAll('.faq-category-heading'));

    // Basic reveal (no dependency on IntersectionObserver)
    faqItems.slice(0,20).forEach(i=> i.classList.add('loaded'));

    function filter(cat, term){
      term = (term||'').toLowerCase();
      faqItems.forEach(it=>{
        const matchCat = cat==='all' || it.dataset.category===cat;
        const matchText = !term || it.textContent.toLowerCase().includes(term);
        if(matchCat && matchText){ it.classList.remove('faq-hidden'); }
        else { it.classList.add('faq-hidden'); if(it.hasAttribute('open')) it.removeAttribute('open'); }
      });
      // Toggle headings depending on at least one visible item
      headings.forEach(h=>{
        const key = h.getAttribute('data-category-heading');
        const anyVisible = faqItems.some(it=>!it.classList.contains('faq-hidden') && it.dataset.category===key);
        if(anyVisible) h.classList.remove('faq-hidden'); else h.classList.add('faq-hidden');
      });
    }

    catButtons.forEach(btn=>{
      btn.addEventListener('click',()=>{
        catButtons.forEach(b=>{b.classList.remove('active');b.setAttribute('aria-pressed','false');});
        btn.classList.add('active');btn.setAttribute('aria-pressed','true');
        filter(btn.dataset.cat||'all', searchInput?.value);
        document.getElementById('faqList').scrollIntoView({behavior:'smooth'});
      });
    });

    searchInput?.addEventListener('input',()=>{
      const active = catButtons.find(b=>b.classList.contains('active'));
      filter(active?.dataset.cat||'all', searchInput.value);
    });

    // Initial full show
    filter('all','');
    const first = faqItems.find(i=>!i.classList.contains('faq-hidden'));
    if(first) first.setAttribute('open','');
  </script>
</Layout>
