---
import Layout from '../layouts/Layout.astro';

interface TimelineEvent {
  date: string;
  month: string;
  year: number;
  icon: string;
  title: string;
  description: string;
  tags: string[];
}

interface RoadmapItem {
  icon: string;
  title: string;
  description: string;
  timeline: string;
}

const timelineEvents: TimelineEvent[] = [
  { date: '15', month: 'SEP', year: 2025, icon: 'fa-users', title: '400 Members Milestone', description: 'Celebrated reaching 400 members! The community continues to thrive and attract passionate programmers.', tags: ['Milestone', 'Growth'] },
  { date: '25', month: 'AUG', year: 2025, icon: 'fa-image', title: 'Official Server Logo Released', description: 'Unveiled the official CodeVerseHub server logo, giving the community a unique and recognizable identity.', tags: ['Logo', 'Identity'] },
  { date: '23', month: 'AUG', year: 2025, icon: 'fa-users', title: '300 Members Milestone', description: 'Community reached 300 members, continuing the rapid growth and engagement.', tags: ['Milestone', 'Community'] },
  { date: '01', month: 'AUG', year: 2025, icon: 'fa-robot', title: 'Official Bot Launched', description: 'Launched our official server bot "Codeverse" to automate tasks, manage contests, and enhance the community experience.', tags: ['Bot', 'Automation'] },
  { date: '28', month: 'JUL', year: 2025, icon: 'fa-users', title: '200 Members Milestone', description: 'Community doubled to 200 members, showing the growing interest in CodeVerseHub.', tags: ['Milestone', 'Growth'] },
  { date: '06', month: 'JUL', year: 2025, icon: 'fa-users', title: '100 Members Milestone', description: 'Our community reached its first 100 members, marking the beginning of a rapidly growing journey.', tags: ['Milestone', 'Community'] },
  { date: '01', month: 'JUN', year: 2025, icon: 'fa-lightbulb', title: 'CodeVerseHub Activation', description: 'Decision made to actively develop and grow CodeVerseHub. The community started gaining new members daily and the vision became a reality.', tags: ['Activation', 'Growth'] },
  { date: '17', month: 'JUL', year: 2024, icon: 'fa-seedling', title: 'CodeVerseHub Founded (Inactive)', description: 'Founded with the vision to build a vibrant programming community, remained inactive for several months as the idea matured.', tags: ['Founded', 'Vision'] },
];

const roadmap: RoadmapItem[] = [
  { icon: 'fa-trophy', title: 'More Contests', description: 'Weekly and monthly contests with diverse problem sets.', timeline: 'Q4 2025' },
  { icon: 'fa-users', title: '1000 Members Milestone', description: 'Scale community to 1000+ active members.', timeline: 'Q1 2026' },
  { icon: 'fa-code', title: 'Problem Bank Expansion', description: 'Expand curated problems to 500+ items.', timeline: 'Q2 2026' },
  { icon: 'fa-chalkboard-teacher', title: 'Mentor Sessions', description: 'Launch mentor-led cohorts for interview prep and peer learning.', timeline: 'Q3 2026' },
];

const years = [...new Set(timelineEvents.map((event) => event.year))].sort((a, b) => b - a);
const eventsByYear = years.map((year) => ({
  year,
  events: timelineEvents.filter((event) => event.year === year),
}));
const foundingEvent = timelineEvents[timelineEvents.length - 1];
---

<Layout title="Timeline - CodeVerseHub" description="Chart CodeVerseHub's community milestones and roadmap of future initiatives.">
  <div class="timeline-page-container">
    <header class="timeline-hero">
      <div class="hero-content">
        <h1 class="hero-title">
          <i class="fas fa-rocket" aria-hidden="true"></i>
          The Journey of CodeVerseHub
        </h1>
        <p class="hero-subtitle">
          From a simple idea in {foundingEvent.year} to a thriving community. Explore our milestones and see what's next on our roadmap.
        </p>
      </div>
    </header>

    <main class="timeline-main">
      {eventsByYear.map(({ year, events }) => (
        <div class="timeline-year-section" id={`year-${year}`}>
          <h2 class="year-heading">{year}</h2>
          <div class="timeline">
            {events.map((event, index) => (
              <div class={`timeline-item ${index % 2 === 0 ? 'left' : 'right'}`}>
                <div class="timeline-content-wrapper">
                  <div class="timeline-date">
                    <span>{event.month} {event.date}</span>
                  </div>
                  <div class="timeline-icon">
                    <i class={`fas ${event.icon}`}></i>
                  </div>
                  <div class="timeline-content">
                    <h3 class="event-title">{event.title}</h3>
                    <p class="event-description">{event.description}</p>
                    <div class="event-tags">
                      {event.tags.map(tag => <span class={`tag ${tag.toLowerCase()}`}>{tag}</span>)}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      ))}
    </main>

    <section class="roadmap-section">
      <div class="section-header">
        <h2 class="section-title">
          <i class="fas fa-route" aria-hidden="true"></i>
          Our Roadmap
        </h2>
        <p class="section-subtitle">What we're building next to empower the community.</p>
      </div>
      <div class="roadmap-grid">
        {roadmap.map((item, index) => (
          <div class="roadmap-card" style={`--card-index: ${index};`}>
            <div class="roadmap-card-header">
              <i class={`fas ${item.icon} roadmap-icon`} aria-hidden="true"></i>
              <span class="roadmap-timeline">{item.timeline}</span>
            </div>
            <h3 class="roadmap-title">{item.title}</h3>
            <p class="roadmap-description">{item.description}</p>
          </div>
        ))}
      </div>
    </section>

    <footer class="timeline-footer">
      <div class="cta-content">
        <h2 class="cta-title">Become Part of Our Story</h2>
        <p class="cta-text">Your next chapter in coding starts here. Join us and help shape the future of CodeVerseHub.</p>
        <a href="https://discord.gg/3xKFvKhuGR" class="cta-button" target="_blank" rel="noopener noreferrer">
          <i class="fab fa-discord" aria-hidden="true"></i>
          Join the Community
        </a>
      </div>
    </footer>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px',
      };

      const observer = new IntersectionObserver((entries, obs) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('is-visible');
            obs.unobserve(entry.target);
          }
        });
      }, observerOptions);

      document.querySelectorAll('.timeline-item, .roadmap-card').forEach(el => {
        observer.observe(el);
      });
    });
  </script>

  <style>

.timeline-section {
  padding: 4rem 1.5rem;
  background: radial-gradient(circle at 15% 12%, rgba(0, 209, 255, 0.08), transparent 55%),
              radial-gradient(circle at 85% 10%, rgba(119, 74, 255, 0.08), transparent 60%),
              linear-gradient(180deg, #030b15 0%, #040e19 100%);
}


.timeline {
  position: relative;
  max-width: 1100px;
  margin: 0 auto;
  padding: 2rem 0;
}

.timeline::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 3px;
  height: 100%;
  background: linear-gradient(to bottom, #38bdf8, #6366f1);
  z-index: 0;
}


.timeline-item {
  position: relative;
  width: 50%;
  padding: 2rem 0;
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.timeline-item.is-visible {
  opacity: 1;
  transform: translateY(0);
}


.timeline-item.left {
  left: 0;
  padding-right: 80px;
  text-align: right;
}

.timeline-item.right {
  left: 50%;
  padding-left: 80px;
  text-align: left;
}


.timeline-icon {
  position: absolute;
  top: 36px;
  width: 44px;
  height: 44px;
  background: #38bdf8;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #06121c;
  font-size: 1.2rem;
  z-index: 2;
  box-shadow: 0 0 0 4px #030b15, 0 0 15px rgba(56, 189, 248, 0.4);
}

.timeline-item.left .timeline-icon {
  right: -22px;
}

.timeline-item.right .timeline-icon {
  left: -22px;
}


.timeline-content {
  position: relative;
  background-color: rgba(26, 41, 56, 0.95);
  border: 1px solid rgba(56, 189, 248, 0.15);
  border-radius: 12px;
  padding: 1.5rem 2rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  z-index: 1;
}

.timeline-content::before {
  content: '';
  position: absolute;
  top: 30px;
  border-style: solid;
  width: 0;
  height: 0;
}

.timeline-item.left .timeline-content::before {
  right: -10px;
  border-width: 10px 0 10px 10px;
  border-color: transparent transparent transparent rgba(56, 189, 248, 0.15);
}

.timeline-item.right .timeline-content::before {
  left: -10px;
  border-width: 10px 10px 10px 0;
  border-color: transparent rgba(56, 189, 248, 0.15) transparent transparent;
}

.timeline-date {
  font-weight: bold;
  color: #38bdf8;
  margin-bottom: 8px;
  font-size: 0.9rem;
}

.timeline-content h3 {
  margin-top: 0;
  font-size: 1.3rem;
  color: #e2e8f0;
}

.timeline-content p {
  margin-bottom: 1rem;
  color: #94a3b8;
  line-height: 1.6;
}


.event-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-top: 12px;
}

.timeline-item.left .event-tags {
  justify-content: flex-end;
}

.timeline-item.right .event-tags {
  justify-content: flex-start;
}

.tag {
  background-color: #334155;
  color: #cbd5e1;
  padding: 4px 10px;
  border-radius: 15px;
  font-size: 0.8rem;
  border: 1px solid rgba(148, 163, 184, 0.3);
}


.timeline-item.is-visible {
  animation: fadeUp 0.6s ease forwards;
}

@keyframes fadeUp {
  from { opacity: 0; transform: translateY(40px); }
  to { opacity: 1; transform: translateY(0); }
}


@media (max-width: 768px) {
  .timeline::before {
    left: 30px;
  }

  .timeline-item,
  .timeline-item.left,
  .timeline-item.right {
    width: 100%;
    left: 0;
    padding-left: 70px;
    padding-right: 0;
    text-align: left;
  }

  .timeline-icon,
  .timeline-item.left .timeline-icon,
  .timeline-item.right .timeline-icon {
    left: 8px;
    right: auto;
  }

  .timeline-item.left .timeline-content::before,
  .timeline-item.right .timeline-content::before {
    left: -10px;
    border-width: 10px 10px 10px 0;
    border-color: transparent rgba(56, 189, 248, 0.15) transparent transparent;
  }

  .timeline-item.left .event-tags,
  .timeline-item.right .event-tags {
    justify-content: flex-start;
  }
}

  
  </style>
</Layout>